//
//  AppDelegate.h
//  YalantisTask2ObjC
//
//  Created by typan on 8/25/15.
//  Copyright (c) 2015 Artem Sherbachuk. All rights reserved.
//

#import <UIKit/UIKit.h>

#warning по коду встречается достаточно много опечаток в именах, есть однотипные проблемы с форматированием, отступы не тех размеров, что нужно. Много кода анимаций. Пожалуйста, исправьте все ошибки по именованию/форматированию и также если Вы хотите использовать анимации, например, при выделении ячейки, не пишите саму анимацию прямо по tableView:didSelectRow..., это сбивает с толку и прячет реальную логику обработки нажатия. Выносить анимашки в отдельные методы, и вызывайте их в тех местах, где нужно. В самих анимациях используется много так называемых "магических" цифр, это и продолжительность анимации, и значения параметров, которые изменяются. Желательно их все также выносить в константы, можно в локальные прямо внутри метода анимации. В идеале "магических" цифр вообще по коду быть не должно. Это касается различных высот, отступов и т.д. Все цифры объявляются константами с "говорящими" именами, чтобы было понятно, что вообще происходит

#warning также рассмотрим ситуацию с кастомными цветами. Встречал у Вас строку вида cell.contentView.backgroundColor = [UIColor colorWithRed:0.204 green:0.737 blue:0.6 alpha:1]. Это также считается "магический" цвет. Если кому-то дадут задание поменять в Вашем коде цвет фона ячейки, то этот человек будет лазить по контроллерам, искать нужную ячейку, и то место, где ей задается цвет. Чтобы избежать таких проблем, все кастомные цвета помещаются в категорию на UIColor, где объявляются статические методы вроде + publisherCellBackgroundColor, который возвращает нужный цвет. Такая же ситуация со шрифтами, если они есть в коде, то пишется категория на UIFont

@interface AppDelegate : UIResponder <UIApplicationDelegate>

@property (strong, nonatomic) UIWindow *window;


@end

